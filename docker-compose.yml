services:
  asterisk:
    container_name: asterisk
    image: andrius/asterisk:latest
    ports:
      - '5060:5060/udp'
      - '5060:5060/tcp'
      - '5038:5038'
    volumes:
      - ./asterisk/config:/etc/asterisk
      - ./asterisk/logs:/var/log/asterisk
    environment:
      - ASTERISK_AMI_USERNAME=${ASTERISK_AMI_USERNAME}
      - ASTERISK_AMI_PASSWORD=${ASTERISK_AMI_PASSWORD}
    networks:
      - telecom-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - telecom-network

  postgres:
    container_name: postgres
    image: timescale/timescaledb:latest-pg16
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=events,api
      - LANG=en_US.utf8
      - LC_ALL=en_US.utf8
      - LC_CTYPE=en_US.utf8
      - LC_COLLATE=en_US.utf8
    volumes:
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres-data:/var/lib/postgresql/data
    networks:
      - telecom-network

  events:
    container_name: events
    restart: always
    build:
      context: .
      dockerfile: apps/events/Dockerfile
    ports:
      - '50052:50052'
    depends_on:
      - asterisk
      - rabbitmq
    environment:
      - ASTERISK_AMI_HOST=asterisk
      - ASTERISK_AMI_PORT=5038
      - ASTERISK_AMI_USERNAME=${ASTERISK_AMI_USERNAME}
      - ASTERISK_AMI_PASSWORD=${ASTERISK_AMI_PASSWORD}
      - RABBIT_URL=amqp://rabbitmq:5672
      - RABBIT_QUEUE=${RABBIT_QUEUE}
    networks:
      - telecom-network

  events-storage:
    container_name: events-storage
    restart: always
    build:
      context: .
      dockerfile: apps/events-storage/Dockerfile
    ports:
      - '50051:50051'
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=events
      - EVENTS_STORAGE_HOST=events-storage
      - EVENTS_STORAGE_PORT=50051
      - RABBIT_URL=amqp://rabbitmq:5672
      - RABBIT_QUEUE=${RABBIT_QUEUE}
    networks:
      - telecom-network

  api:
    container_name: api
    restart: always
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - events-storage
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=api
      - EVENTS_STORAGE_ADDRESS=events-storage:50051
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
    volumes:
      - ./apps/api/logs:/app/logs
    networks:
      - telecom-network

volumes:
  postgres-data:
  rabbitmq-data:

networks:
  telecom-network:
    driver: bridge
